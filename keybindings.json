// Place your key bindings in this file to overwrite the defaults
[

// Removed default bindings
{ "key": "ctrl+g",                "command": "cancelSelection" },
{ "key": "alt+cmd+f",             "command": "cancelSelection" },
{ "key": "cmd+\\",                "command": "cancelSelection" },

// Cancel actions
{ "key": "ctrl+g",                "command": "closeReferenceSearchEditor",
                                     "when": "editorFocus && inReferenceSearchEditor" },
{ "key": "ctrl+g",                "command": "closeReferenceSearchEditor",
                                     "when": "editorFocus && inInnerEditor" },
{ "key": "ctrl+g",                "command": "cancelSelection",
                                     "when": "editorTextFocus && editorHasSelection" },
{ "key": "ctrl+g",                "command": "removeSecondaryCursors",
                                     "when": "editorTextFocus && editorHasMultipleSelections" },
{ "key": "ctrl+g",                "command": "closeFindWidget",
                                     "when": "editorFocus && findWidgetVisible" },
{ "key": "ctrl+g",                "command": "closeBreakpointWidget",
                                     "when": "editorFocus && breakpointWidgetVisible" },
{ "key": "ctrl+g",                "command": "leaveSnippet",
                                     "when": "editorTextFocus && inSnippetMode" },
{ "key": "ctrl+g",                "command": "closeMarkersNavigation",
                                     "when": "editorFocus && markersNavigationVisible" },
{ "key": "ctrl+g",                "command": "closeReferenceSearch",
                                     "when": "editorFocus && referenceSearchVisible" },
{ "key": "ctrl+g",                "command": "closeParameterHints",
                                     "when": "editorTextFocus && parameterHintsVisible" },
{ "key": "ctrl+g",                "command": "closeQuickFixWidget",
                                     "when": "editorFocus && quickFixWidgetVisible" },
{ "key": "ctrl+g",                "command": "hideSuggestWidget",
                                     "when": "editorTextFocus && suggestWidgetVisible" },
{ "key": "ctrl+g",                "command": "cancelRenameInput",
                                     "when": "editorFocus && renameInputVisible" },
{ "key": "ctrl+g",                "command": "closeAccessibilityHelp",
                                     "when": "editorFocus && accessibilityHelpWidgetVisible" },
{ "key": "ctrl+g",                "command": "workbench.action.closeMessages",
                                     "when": "globalMessageVisible" },
{ "key": "ctrl+g",                "command": "closePeekDeclarationEditor",
                                     "when": "editorFocus && inInnerEditor" },
{ "key": "ctrl+g",                "command": "leaveChangeAllMode",
                                     "when": "editorTextFocus && inChangeAllMode" },
{ "key": "ctrl+g",                "command": "closePeekDeclaration",
                                     "when": "editorFocus && peekDeclarationVisible" },

// VS Code Functions
{ "key": "cmd+0",                "command": "workbench.action.toggleSidebarVisibility" },
{ "key": "cmd+x",                "command": "workbench.action.showCommands" },

// Basic Edit
{ "key": "ctrl+x ctrl+f",         "command": "workbench.action.files.openFile" },
{ "key": "ctrl+x ctrl+s",         "command": "workbench.action.files.save" },
{ "key": "ctrl+x s",              "command": "workbench.action.files.saveAll" },
{ "key": "ctrl+x s",              "command": "workbench.action.files.saveAs" },
{ "key": "ctrl+w",                "command": "editor.action.clipboardCutAction",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+y",                "command": "editor.action.clipboardPasteAction",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+/",                "command": "undo",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+_",                "command": "undo",
                                     "when": "editorTextFocus" },
{ "key": "cmd+ctrl+/",            "command": "redo",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+x u",              "command": "undo",
                                     "when": "editorTextFocus" },
{ "key": "cmd+ctrl+_",            "command": "redo",
                                     "when": "editorTextFocus" },
{ "key": "shift+ctrl+c shift+ctrl+c",
                                  "command": "editor.action.insertCursorAtEndOfEachLineSelected",
                                     "when": "editorTextFocus" },

// Cursor Movement
{ "key": "cmd+f",                 "command": "cursorWordRight",
                                     "when": "editorTextFocus" },
{ "key": "cmd+b",                 "command": "cursorWordLeft",
                                     "when": "editorTextFocus" },
{ "key": "cmd+shift+,",           "command": "cursorTop",
                                     "when": "editorTextFocus" },
{ "key": "cmd+g cmd+g",           "command": "workbench.action.gotoLine" },

// Region
{ "key": "ctrl+x h",              "command": "editor.action.selectAll",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+-",                "command": "expand_region" },

// Widget
{ "key": "ctrl+p",                "command": "workbench.action.quickOpenNavigatePrevious",
                                     "when": "inQuickOpen" },
{ "key": "ctrl+n",                "command": "workbench.action.quickOpenNavigateNext",
                                     "when": "inQuickOpen" },
{ "key": "ctrl+p",                "command": "showPrevParameterHint",
                                     "when": "editorTextFocus && parameterHintsVisible" },
{ "key": "ctrl+n",                "command": "showNextParameterHint",
                                     "when": "editorTextFocus && parameterHintsVisible" },
{ "key": "ctrl+p",                "command": "selectPrevQuickFix",
                                     "when": "editorFocus && quickFixWidgetVisible" },
{ "key": "ctrl+n",                "command": "selectNextQuickFix",
                                     "when": "editorFocus && quickFixWidgetVisible" },
{ "key": "ctrl+v",                "command": "selectNextPageQuickFix",
                                     "when": "editorFocus && quickFixWidgetVisible" },
{ "key": "ctrl+shift+v",          "command": "selectPrevPageQuickFix",
                                     "when": "editorFocus && quickFixWidgetVisible" },
{ "key": "ctrl+p",                "command": "selectPrevSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible" },
{ "key": "ctrl+n",                "command": "selectNextSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible" },
{ "key": "ctrl+v",                "command": "selectNextPageSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible" },
{ "key": "ctrl+shift+v",          "command": "selectPrevPageSuggestion",
                                     "when": "editorTextFocus && suggestWidgetVisible" },

// Scroll
{ "key": "ctrl+v",                "command": "scrollPageDown",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+v",          "command": "scrollPageUp",
                                     "when": "editorTextFocus" },

// Navigation
{ "key": "ctrl+s",                "command": "actions.find" },
{ "key": "ctrl+s",                "command": "editor.action.nextMatchFindAction",
                                     "when": "editorFocus && findWidgetVisible" },
{ "key": "ctrl+r",                "command": "actions.find",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+r",                "command": "editor.action.previousMatchFindAction",
                                     "when": "editorFocus && findWidgetVisible" },
{ "key": "cmd+ctrl+shift+5",      "command": "editor.action.startFindReplaceAction" },
{ "key": "cmd+ctrl+shift+s",      "command": "editor.action.startFindReplaceAction" },
{ "key": "ctrl+shift+s",          "command": "workbench.view.search" },
{ "key": "cmd+m b",               "command": "workbench.action.quickOpen" },
{ "key": "ctrl+x b",              "command": "workbench.action.quickOpen" },
{ "key": "cmd+alt+left",          "command": "workbench.files.action.openPreviousWorkingFile" },
{ "key": "cmd+alt+right",         "command": "workbench.files.action.openNextWorkingFile" },

// Window Management
{ "key": "ctrl+x 0",              "command": "workbench.action.closeActiveEditor" },
{ "key": "ctrl+x 1",              "command": "workbench.action.closeOtherEditors" },
{ "key": "cmd+w",                 "command": "workbench.action.closeActiveEditor" },
{ "key": "ctrl+x 3",              "command": "workbench.action.splitEditor" },
{ "key": "ctrl+x o",              "command": "workbench.action.cycleEditor" },

// Display
{ "key": "ctrl+x 9",              "command": "workbench.action.toggleFullScreen" }

]